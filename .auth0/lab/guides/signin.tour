{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "0: signin",
  "nextTour": "1: Working with the user profile",
  "steps": [
    {
      "file": "",
      "description": "## Authorize the Auth0 Labs Extension to Access Your Default Tenant\nBefore getting started, youâ€™ll need to authorize the Auth0 Labs extension to access your default tenant.\n\n1. #### Click [here](command:auth0.auth.signIn) to sign into your Auth0 account with the Auth0 extension.\n     A browser window will open requesting that you confirm that the code shown matches the one shown in the lower right hand side of your vscode window.\n1. #### Confirm that the values match, then click the **Confirm** button.\n     ![Confirm the values in VS Code](https://cdn.auth0.com/website/a0fun/v2/create-1.gif)   \n     ![Confirm the values in Auth0](https://cdn.auth0.com/website/a0fun/v2/create-0.gif)   \n1. #### The default tenant should already be selected (it starts with *dev-*) \n1. #### Scroll down and click Accept. You should see a success message. You can close this browser tab now!\nNext, you'll set the tenant up with the necessary Application and API to compete this lab.",
      "line": 1
    },
    {
      "file": "",
      "line": 1,
      "title": "Create a user account in the Lab: Web App",
      "description": "## Create a new user account and log into your labs web application.\n\nAt this point, you may have one or more existing user accounts in your Lab: Web App Auth0 Application. \n\n**For this lab, let's create one additional user account.** \n\nThere's a quick and easy way to create a new Expenses App account tied to the same Gmail address you already used by using an alias. \n\nTo create an alias, append a suffix like **_\"+auth0labs\"_** to your email address when you sign up. \n\nFor example, if your Gmail email address is **_user@gmail.com_**, you would sign up for the Expenses application with **_user+auth0labs@gmail.com_** as your username. If you've previously used the **_\"+auth0labs\"_** alias, simply append a number to that alias like **_\"+auth0labs1\"_**.\n\nAuth0 will view this as a distinct account from the original.\n\n**Note: This is a feature Gmail supports, but not all email providers do.**\n\nLet's go ahead and create that user in the Lab: Web App now.\n\n\n1. #### Click [here](command:auth0.lab.tenantConfigure) to ensure your tenant is set up with the correct callback and logout URLs for *Lab: Web App*. (Note: this will update the Callback URL for the *Lab: Web App* application in your tenant).\n    Wait for the message that `resources.yml` has finished deploying before continuing to the next step.\n    ![resources deployed message](https://cdn.auth0.com/website/a0fun/v2/resources.png)\n\n1. #### Click [here](command:auth0.lab.localConfigure) to set your environment configurations (creates `.env` file in `src/web-app`).\n\n1. #### Start the lab application by clicking [here](command:workbench.action.debug.start).\n    You'll need to wait a moment for the debugger to build and deploy the app.\n\n1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open the application in your browser, once it has finished deploying.\n\n1. #### Click the log-in link in the top navigation.\n\n1. #### Select signup. Then, in the username field, type your gmail address, appending +auth0labs to the portion before @gmail.com.\n    See the yoda example above as a model.\n\n1. #### Enter a strong password and create the account!\n\n    ![account-1](https://cdn.auth0.com/website/a0fun/v2/account-1.gif)\n\nThat's it! You should now have a user account to work with in the Auth0 database."
    }
  ]
}